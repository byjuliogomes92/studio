
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isWorkspaceMember(workspaceId) {
      return exists(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid)_$(workspaceId));
    }

    match /workspaces/{workspaceId} {
      allow read: if isWorkspaceMember(workspaceId);
      allow write: if request.auth.uid == get(/databases/$(database)/documents/workspaces/$(workspaceId)).data.ownerId;
    }

    match /workspaceMembers/{membershipId} {
      allow read: if request.auth.uid == resource.data.userId;
      // Allow owner to manage members
      allow write: if get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.ownerId == request.auth.uid;
    }
    
    // Projects, Pages, Brands, Templates are all protected by workspace membership
    match /{collection}/{docId} {
      allow read, write: if isWorkspaceMember(request.resource.data.workspaceId);
    }

    // Analytics data should be readable by workspace members
    match /pageViews/{viewId} {
      allow read: if isWorkspaceMember(resource.data.workspaceId);
      allow create; // Allow anyone to create (log a view)
      allow update, delete: if false; // Disallow updates/deletes
    }

    match /formSubmissions/{submissionId} {
      allow read: if isWorkspaceMember(resource.data.workspaceId);
      allow create; // Allow anyone to create (submit a form)
      allow update, delete: if false; // Disallow updates/deletes
    }

    match /userProgress/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}
