
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isMember(workspaceId, role) {
      // Check if a user is a member of a specific workspace with a given role.
      return exists(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid)_$(workspaceId)) &&
             get(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid)_$(workspaceId)).data.role in role;
    }
    
    function isOwnerOfDoc(doc) {
        return request.auth.uid == doc.userId;
    }

    // --- Workspace and Member Rules ---
    match /workspaces/{workspaceId} {
      allow read: if isMember(workspaceId, ['owner', 'admin', 'editor', 'viewer']);
      allow create: if isOwnerOfDoc(request.resource.data);
      allow update, delete: if isMember(workspaceId, ['owner']);
    }

    match /workspaceMembers/{memberId} {
      // Members can read their own membership record.
      allow read: if request.auth.uid == resource.data.userId;
      // Owners/Admins can add/remove members from their workspace.
      allow create, delete: if isMember(resource.data.workspaceId, ['owner', 'admin']);
      // Owners/Admins can update roles.
      allow update: if isMember(resource.data.workspaceId, ['owner', 'admin']);
    }

    // --- Resource Rules (Projects, Pages, Brands, etc.) ---
    match /{collection}/{docId} 
          where collection in ['projects', 'brands', 'templates', 'pages_drafts'] {
        // Allow reading/listing if the user is a member of the workspace.
        allow list, read: if isMember(resource.data.workspaceId, ['owner', 'admin', 'editor', 'viewer']);
        // Allow writing if the user is an editor, admin, or owner.
        allow write: if isMember(request.resource.data.workspaceId, ['owner', 'admin', 'editor']);
    }

    match /pages_published/{pageId} {
      allow read: if true; // Public can read published pages
      allow write: if isMember(request.resource.data.workspaceId, ['owner', 'admin', 'editor']);
    }

    // --- User-Specific Rules ---
    match /userProgress/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // --- Public/Analytics Rules ---
    match /pageViews/{viewId} {
      allow create: if true; // Anyone can trigger a page view log.
      allow read: if isMember(get(/databases/$(database)/documents/pages_published/$(resource.data.pageId)).data.workspaceId, ['owner', 'admin', 'editor', 'viewer']);
    }

    match /formSubmissions/{submissionId} {
      allow create: if true; // Anyone can submit a form.
      allow read: if isMember(get(/databases/$(database)/documents/pages_published/$(resource.data.pageId)).data.workspaceId, ['owner', 'admin', 'editor', 'viewer']);
    }
  }
}
