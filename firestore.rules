
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Projects can be read, created, updated, and deleted only by the owner
    match /projects/{projectId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Pages can be read, created, updated, and deleted only by the owner
    match /pages/{pageId} {
       allow read, update, delete: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }
    
    // Templates can be read, created, updated, and deleted only by the owner
    match /templates/{templateId} {
       allow read, update, delete: if isOwner(resource.data.createdBy);
       allow create: if isOwner(request.resource.data.createdBy);
    }
    
    // User progress can only be read and updated by the owner
    match /userProgress/{userId} {
        allow read, update: if isOwner(userId);
        allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Page views and form submissions can be created by anyone (publicly)
    // but should not be readable or updatable by clients to protect PII.
    // Server-side logic will handle reading this data.
    match /pageViews/{viewId} {
      allow create: if true;
      allow read, update, delete: if false; // Protect privacy
    }
    
    match /formSubmissions/{submissionId} {
      allow create: if true;
      allow read, update, delete: if false; // Protect PII
    }

  }
}
