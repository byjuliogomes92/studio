rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isMember(workspaceId) {
      // Allow if the user is a member of the given workspace.
      return exists(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid + '_' + workspaceId));
    }

    function isOwner(workspaceId) {
      // Allow if the user is the owner of the given workspace.
      let memberPath = /databases/$(database)/documents/workspaceMembers/$(request.auth.uid + '_' + workspaceId);
      return exists(memberPath) && get(memberPath).data.role == 'owner';
    }

    // --- Workspace Rules ---
    match /workspaces/{workspaceId} {
      allow read: if isMember(workspaceId);
      allow update: if isOwner(workspaceId);
      // Disallow direct creation/deletion from client. Handled by server functions/backend logic.
      allow create, delete: if false;
    }

    match /workspaceMembers/{membershipId} {
        // Users can read their own membership.
        allow read: if request.auth.uid == resource.data.userId;
        // Only owners of the workspace can create or delete memberships.
        allow create, delete: if isOwner(resource.data.workspaceId);
    }

    // --- App Resource Rules ---
    match /projects/{projectId} {
      allow list: if isMember(request.query.workspaceId);
      allow get, update, delete: if isMember(resource.data.workspaceId);
      allow create: if isMember(request.resource.data.workspaceId);
    }
    
    match /brands/{brandId} {
        allow list: if isMember(request.query.workspaceId);
        allow get, update, delete: if isMember(resource.data.workspaceId);
        allow create: if isMember(request.resource.data.workspaceId);
    }

    match /pages_drafts/{pageId} {
      allow list: if isMember(request.query.workspaceId);
      allow get, create, update, delete: if isMember(resource.data.workspaceId) || isMember(request.resource.data.workspaceId);
    }

    match /pages_published/{pageId} {
      allow read: if true;
      allow create, update, delete: if isMember(resource.data.workspaceId) || isMember(request.resource.data.workspaceId);
    }

    match /templates/{templateId} {
      allow read: if resource.data.isDefault == true || isMember(resource.data.workspaceId);
      allow create: if isMember(request.resource.data.workspaceId);
      allow update, delete: if isMember(resource.data.workspaceId);
    }

    match /userProgress/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // --- Analytics Rules ---
    match /pageViews/{viewId} {
      allow create: if true;
      allow read: if isMember(resource.data.workspaceId);
    }

    match /formSubmissions/{submissionId} {
      allow create: if true;
      allow read: if exists(/databases/$(database)/documents/pages_published/$(resource.data.pageId)) &&
                   isMember(get(/databases/$(database)/documents/pages_published/$(resource.data.pageId)).data.workspaceId);
    }
  }
}
