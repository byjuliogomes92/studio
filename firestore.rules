rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Projects can be read in a list only if the query filters by the user's own ID.
    // Individual project documents can be updated/deleted only by the owner.
    match /projects/{projectId} {
      allow read: if request.auth.uid != null;
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId);
    }
    
    // Brands follow the same pattern as projects.
    match /brands/{brandId} {
      allow read: if request.auth.uid != null;
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Drafts are private and can only be accessed by their owner.
    match /pages_drafts/{pageId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // Published pages are public to read, but only the owner can write (publish).
    match /pages_published/{pageId} {
      allow read: if true;
      allow write: if isOwner(resource.data.userId);
    }

    // Default templates are public; custom templates are private to the creator.
    match /templates/{templateId} {
      allow read: if resource.data.isDefault == true || isOwner(resource.data.createdBy);
      allow create: if isOwner(request.resource.data.createdBy);
      allow update, delete: if isOwner(resource.data.createdBy);
    }

    // A user can only access their own progress document.
    match /userProgress/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Anyone can create analytics data.
    // Only the owner of the page can read the associated analytics data.
    match /pageViews/{viewId} {
      allow create: if true;
      allow read: if request.auth.uid != null 
                    && get(/databases/$(database)/documents/pages_published/$(resource.data.pageId)).data.userId == request.auth.uid;
    }

    match /formSubmissions/{submissionId} {
      allow create: if true;
      allow read: if request.auth.uid != null 
                    && get(/databases/$(database)/documents/pages_published/$(resource.data.pageId)).data.userId == request.auth.uid;
    }
  }
}
