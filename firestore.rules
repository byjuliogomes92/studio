
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a member of a specific workspace.
    function isWorkspaceMember(workspaceId) {
      return exists(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid)_$(workspaceId));
    }

    // Workspaces can be created by any authenticated user.
    // Reading/updating a workspace is restricted to its members.
    match /workspaces/{workspaceId} {
      allow read, update, delete: if isWorkspaceMember(workspaceId);
      allow create: if request.auth.uid == request.resource.data.ownerId;
    }

    // Membership can be read by members of the workspace.
    // Admins or owners of a workspace can manage memberships.
    match /workspaceMembers/{membershipId} {
      allow read: if isWorkspaceMember(resource.data.workspaceId);
      // Allow creation/deletion for admins/owners (simplified for now).
      // A more robust rule would check the role of the user trying to write.
      allow write: if isWorkspace_member(request.resource.data.workspaceId);
    }
    
    // Projects, Brands, and Page Drafts are readable/listable by workspace members.
    // Write operations are also restricted to workspace members.
    match /projects/{projectId} {
      allow read, write: if isWorkspaceMember(request.resource.data.workspaceId);
    }

    match /brands/{brandId} {
      allow read, write: if isWorkspaceMember(request.resource.data.workspaceId);
    }
    
    match /pages_drafts/{pageId} {
      allow read, write: if isWorkspaceMember(request.resource.data.workspaceId);
    }

    // Published pages are public to read.
    // Only workspace members can publish (write) to this collection.
    match /pages_published/{pageId} {
      allow read: if true;
      allow write: if isWorkspaceMember(request.resource.data.workspaceId);
    }

    // Templates can be read if they are default or created by the user.
    // Users can only manage templates they created.
    match /templates/{templateId} {
      allow read: if resource.data.isDefault == true || request.auth.uid == resource.data.createdBy;
      allow create: if request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth.uid == resource.data.createdBy;
    }

    // User can only read/write their own progress document.
    match /userProgress/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Page views and form submissions can be created by anyone (public pages).
    // Reading them is restricted to workspace members of the page's workspace.
    function getWorkspaceIdForPage(pageId) {
      return get(/databases/$(database)/documents/pages_published/$(pageId)).data.workspaceId;
    }

    match /pageViews/{viewId} {
      allow create: if true;
      allow read: if isWorkspaceMember(getWorkspaceIdForPage(resource.data.pageId));
    }

    match /formSubmissions/{submissionId} {
      allow create: if true;
      allow read: if isWorkspaceMember(getWorkspaceIdForPage(resource.data.pageId));
    }
  }
}
