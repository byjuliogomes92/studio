rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for Projects
    match /projects/{projectId} {
      allow list, get: if request.auth != null && request.auth.uid == request.query.filters.userId.string_value;
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId);
    }
    
    // Rules for Brands (Brand Kits)
    match /brands/{brandId} {
      allow list, get: if request.auth != null && request.auth.uid == request.query.filters.userId.string_value;
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Rules for Draft pages (the ones users edit)
    match /pages_drafts/{pageId} {
        allow list, get: if request.auth != null && request.auth.uid == request.query.filters.userId.string_value;
        allow create, update, delete: if isOwner(request.resource.data.userId);
    }

    // Rules for Published pages (publicly accessible via API route)
    match /pages_published/{pageId} {
        allow read: if true;
        allow write: if isOwner(request.resource.data.userId);
    }

    // Rules for Templates
    match /templates/{templateId} {
      allow get: if resource.data.isDefault == true || isOwner(resource.data.createdBy);
      allow list: if request.auth != null && request.auth.uid == request.query.filters.createdBy.string_value;
      allow create: if isOwner(request.resource.data.createdBy);
      allow update, delete: if isOwner(resource.data.createdBy);
    }
    
    // Rules for User Onboarding Progress
    match /userProgress/{userId} {
      allow read, write: if isOwner(userId);
    }

    // --- Analytics Collections ---
    // These are kept public for simplicity and to avoid permission errors
    // from the public-facing API routes that log this data.

    match /pageViews/{viewId} {
      allow read, write: if true;
    }

    match /formSubmissions/{submissionId} {
      allow read, write: if true;
    }
  }
}