rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /projects/{projectId} {
      allow read, write: if isOwner(resource.data.userId);
    }

    // Allow public read for the API proxy, but restrict write operations to the owner.
    match /pages/{pageId} {
      allow read: if true;
      allow write: if isOwner(resource.data.userId);
    }
    
    match /templates/{templateId} {
      allow read: if resource.data.isDefault == true || isOwner(resource.data.createdBy);
      allow create: if isOwner(request.resource.data.createdBy);
      allow update, delete: if isOwner(resource.data.createdBy);
    }

    match /userProgress/{userId} {
      allow read, write: if isOwner(userId);
    }

    match /pageViews/{viewId} {
      // Anyone can create a page view log (via the tracking pixel).
      allow create: if true;
      // Only the owner of the page can read its analytics.
      allow read: if isOwner(resource.data.userId);
      // Nobody can update or delete analytics logs.
      allow update, delete: if false;
    }
  }
}
