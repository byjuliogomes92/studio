rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isMember(workspaceId) {
      return isAuthenticated() && 
             workspaceId != null &&
             exists(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid + '_' + workspaceId));
    }
    
    function isOwner(workspaceId) {
      let memberPath = /databases/$(database)/documents/workspaceMembers/$(request.auth.uid + '_' + workspaceId);
      return isAuthenticated() && 
             workspaceId != null &&
             exists(memberPath) && 
             get(memberPath).data.role == 'owner';
    }
    
    function hasWorkspaceAccess(workspaceId) {
      return workspaceId != null && isMember(workspaceId);
    }
    
    // --- Workspaces ---
    match /workspaces/{workspaceId} {
      allow read: if hasWorkspaceAccess(workspaceId);
      allow update: if isOwner(workspaceId);
      allow create, delete: if false; // só backend/admin
    }
    
    // --- Membros ---
    match /workspaceMembers/{membershipId} {
      allow read: if isAuthenticated() && 
                     (request.auth.uid == resource.data.userId || 
                      hasWorkspaceAccess(resource.data.workspaceId));
      allow create: if false; // só backend/admin
      allow delete: if isAuthenticated() && 
                       (isOwner(resource.data.workspaceId) || 
                        request.auth.uid == resource.data.userId);
    }
    
    // --- Projetos ---
    match /projects/{projectId} {
      allow read, update, delete: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if hasWorkspaceAccess(request.resource.data.workspaceId);
    }
    
    // --- Brands ---
    match /brands/{brandId} {
      allow read, update, delete: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if hasWorkspaceAccess(request.resource.data.workspaceId);
    }
    
    // --- Pages Drafts ---
    match /pages_drafts/{pageId} {
      allow read, update, delete: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if hasWorkspaceAccess(request.resource.data.workspaceId);
    }
    
    // --- Pages Published ---
    match /pages_published/{pageId} {
      allow read: if true; // público
      allow create: if hasWorkspaceAccess(request.resource.data.workspaceId);
      allow update, delete: if hasWorkspaceAccess(resource.data.workspaceId);
    }
    
    // --- Templates ---
    match /templates/{templateId} {
      allow read: if resource.data.isDefault == true || 
                     hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if hasWorkspaceAccess(request.resource.data.workspaceId);
      allow update, delete: if hasWorkspaceAccess(resource.data.workspaceId);
    }
    
    // --- User Progress ---
    match /userProgress/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // --- Analytics ---
    match /pageViews/{viewId} {
      allow create: if true;
      allow read: if hasWorkspaceAccess(resource.data.workspaceId);
    }
    
    match /formSubmissions/{submissionId} {
      allow create: if true;
      allow read: if exists(/databases/$(database)/documents/pages_published/$(resource.data.pageId)) &&
                     hasWorkspaceAccess(get(/databases/$(database)/documents/pages_published/$(resource.data.pageId)).data.workspaceId);
    }
  }
}