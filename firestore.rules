
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }
    
    function isWorkspaceMember(workspaceId) {
      return isAuthenticated() && 
             workspaceId != null &&
             exists(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid + '_' + workspaceId));
    }
    
    function isOwner(workspaceId) {
      let memberPath = /databases/$(database)/documents/workspaceMembers/$(request.auth.uid + '_' + workspaceId);
      return isAuthenticated() && 
             workspaceId != null &&
             exists(memberPath) && 
             get(memberPath).data.role == 'owner';
    }
    
    function isEditor(workspaceId) {
      let memberPath = /databases/$(database)/documents/workspaceMembers/$(request.auth.uid + '_' + workspaceId);
      return isAuthenticated() && 
             workspaceId != null &&
             exists(memberPath) && 
             (get(memberPath).data.role == 'owner' || get(memberPath).data.role == 'editor');
    }
    
    function hasWorkspaceAccess(workspaceId) {
      return workspaceId != null && isWorkspaceMember(workspaceId);
    }
    
    function isResourceOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // --- Users ---
    match /users/{userId} {
      allow read, write: if isResourceOwner(userId);
    }
    
    // --- User Progress ---
    match /userProgress/{userId} {
      allow read, write: if isResourceOwner(userId);
    }
    
    // --- Workspaces ---
    match /workspaces/{workspaceId} {
      allow read: if hasWorkspaceAccess(workspaceId);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.ownerId;
      allow update: if isOwner(workspaceId);
      allow delete: if isAdmin(); // Only admin can delete workspaces
    }
    
    // --- Workspace Members ---
    match /workspaceMembers/{membershipId} {
      allow read: if isAuthenticated() && 
                     (request.auth.uid == resource.data.userId || 
                      hasWorkspaceAccess(resource.data.workspaceId));
      allow create: if isAuthenticated() && isOwner(request.resource.data.workspaceId);
      allow update: if isAuthenticated() && isOwner(resource.data.workspaceId);
      allow delete: if isAuthenticated() && 
                       (isOwner(resource.data.workspaceId) || 
                        request.auth.uid == resource.data.userId);
    }
    
    // --- Projects ---
    match /projects/{projectId} {
      allow read: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if hasWorkspaceAccess(request.resource.data.workspaceId) && 
                       isAuthenticated();
      allow update, delete: if isEditor(resource.data.workspaceId);
    }
    
    // --- Brands ---
    match /brands/{brandId} {
      allow read: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if isEditor(request.resource.data.workspaceId);
      allow update, delete: if isEditor(resource.data.workspaceId);
    }
    
    // --- Pages Drafts ---
    match /pages_drafts/{pageId} {
      allow read: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if isEditor(request.resource.data.workspaceId);
      allow update, delete: if isEditor(resource.data.workspaceId);
    }
    
    // --- Pages Published ---
    match /pages_published/{pageId} {
      allow read: if true; // Public pages
      allow create: if isEditor(request.resource.data.workspaceId);
      allow update, delete: if isEditor(resource.data.workspaceId);
    }
    
    // --- Templates (Default templates) ---
    match /defaultTemplates/{templateId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }

    // --- Templates (User-created) ---
    match /templates/{templateId} {
      allow read: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if hasWorkspaceAccess(request.resource.data.workspaceId) &&
                       isAuthenticated();
      allow update, delete: if isEditor(resource.data.workspaceId);
    }
    
    // --- Media ---
    match /media/{mediaId} {
      allow read: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if isEditor(request.resource.data.workspaceId);
      allow update, delete: if isEditor(resource.data.workspaceId);
    }
    
    // --- Activity Logs ---
    match /activityLogs/{logId} {
      allow read: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if isAuthenticated();
      allow update, delete: if false; // Logs are immutable
    }

    // --- Page Comments ---
    match /pageComments/{commentId} {
      allow read: if hasWorkspaceAccess(resource.data.workspaceId);
      allow create: if isEditor(request.resource.data.workspaceId) && isResourceOwner(request.resource.data.userId);
      allow update: if isEditor(resource.data.workspaceId); // Allows editors to resolve/update thread
      allow delete: if isEditor(resource.data.workspaceId) || isResourceOwner(resource.data.userId);
    }
    
    // --- Invitations/Convites ---
    match /invitations/{invitationId} {
      allow read: if isAuthenticated() && 
                     (request.auth.uid == resource.data.invitedUserId || 
                      hasWorkspaceAccess(resource.data.workspaceId));
      allow create: if isOwner(request.resource.data.workspaceId);
      allow update: if isAuthenticated() && request.auth.uid == resource.data.invitedUserId;
      allow delete: if isAuthenticated() && 
                       (isOwner(resource.data.workspaceId) || 
                        request.auth.uid == resource.data.invitedUserId);
    }
    
    // --- Analytics ---
    match /pageViews/{viewId} {
      allow create: if true;
      allow read, list: if hasWorkspaceAccess(resource.data.workspaceId);
      allow update, delete: if false;
    }
    
    match /formSubmissions/{submissionId} {
      allow create: if true;
      // Use pages_drafts to get workspaceId, as it's the source of truth and always exists.
      allow read, list: if exists(/databases/$(database)/documents/pages_drafts/$(resource.data.pageId)) &&
                           hasWorkspaceAccess(get(/databases/$(database)/documents/pages_drafts/$(resource.data.pageId)).data.workspaceId);
      allow update, delete: if false;
    }
    
    // --- Notifications ---
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAdmin();
      allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow delete: if isAdmin();
    }
    
    // --- Platform Settings ---
    match /platformSettings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // --- Support Tickets ---
    match /supportTickets/{ticketId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read: if isAuthenticated() && 
                     (resource.data.userId == request.auth.uid || isAdmin());
      allow list: if isAdmin();
      allow update: if isAuthenticated() &&
                       (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }
    
    // --- Ticket Comments ---
    match /ticketComments/{commentId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated() && 
                     (exists(/databases/$(database)/documents/supportTickets/$(resource.data.ticketId)) &&
                      (get(/databases/$(database)/documents/supportTickets/$(resource.data.ticketId)).data.userId == request.auth.uid ||
                       isAdmin()));
      allow update, delete: if false; // Comments are immutable
    }
    
    // --- Workspace Usage Stats ---
    match /workspaceUsage/{workspaceId} {
      allow read: if hasWorkspaceAccess(workspaceId);
      allow write: if isEditor(workspaceId) || isAdmin();
    }
    
    // --- User Settings/Preferences ---
    match /userSettings/{userId} {
      allow read, write: if isResourceOwner(userId);
    }

    // --- Deny all access to backups by default ---
    match /backups/{backupId} {
      allow read, write: if false;
    }
  }
}
