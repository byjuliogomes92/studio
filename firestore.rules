
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is a member of a workspace.
    function isWorkspaceMember(workspaceId) {
      return exists(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid)_$(workspaceId));
    }
    
    // Helper function to check if a user is an owner or editor of a workspace.
    function isWorkspaceEditor(workspaceId) {
      let memberRole = get(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid)_$(workspaceId)).data.role;
      return memberRole == 'owner' || memberRole == 'editor';
    }

    // Users can only read/write their own user document.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
     match /userProgress/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Workspaces can be read by members, and updated by editors/owners.
    match /workspaces/{workspaceId} {
      allow read: if request.auth != null && isWorkspaceMember(workspaceId);
      allow update: if request.auth != null && isWorkspaceEditor(workspaceId);
      // creation is handled by functions
    }
    
    // Membership can be read by members, and created/deleted by editors/owners.
    match /workspaceMembers/{membershipId} {
        allow read: if request.auth != null && isWorkspaceMember(resource.data.workspaceId);
        // Let functions handle create/delete/update for more complex logic
        allow create, delete, update: if false; 
    }
    
    // Projects, Pages, Brands, Templates, Media can be managed by workspace members.
    match /{collection}/{docId} 
    where collection in ['projects', 'pages_drafts', 'pages_published', 'brands', 'templates', 'media', 'activityLogs', 'formSubmissions', 'pageViews'] {
        allow read, delete: if request.auth != null && isWorkspaceMember(resource.data.workspaceId);
        allow create, update: if request.auth != null && isWorkspaceEditor(get(/databases/$(database)/documents/$(collection)/$(docId)).data.workspaceId)
                                 || (request.auth != null && isWorkspaceEditor(request.resource.data.workspaceId));
    }

    // Notifications can be read by any authenticated user. Creation is handled by admin functions.
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow write: if false; // Managed by admin backend
    }
    
    // Platform settings are read-only for users.
    match /platformSettings/global {
        allow read: if request.auth != null;
        allow write: if false; // Managed by admin backend
    }

    // Support tickets can be managed by their creators or admins.
    match /supportTickets/{ticketId} {
        allow read, update: if request.auth != null && (
            resource.data.userId == request.auth.uid || 
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
        );
        allow create: if request.auth != null;
    }

    match /ticketComments/{commentId} {
        allow read: if request.auth != null && get(/databases/$(database)/documents/supportTickets/$(resource.data.ticketId)).data.userId == request.auth.uid;
        allow create: if request.auth != null;
    }
  }
}
