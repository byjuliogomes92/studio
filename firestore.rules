rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isUserAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }

    function isMember(workspaceId) {
      return isUserAuthenticated() && exists(/databases/$(database)/documents/workspaceMembers/$(request.auth.uid)_$(workspaceId));
    }

    function isOwner(workspaceId) {
      let memberPath = /databases/$(database)/documents/workspaceMembers/$(request.auth.uid)_$(workspaceId);
      return isMember(workspaceId) && get(memberPath).data.role == 'owner';
    }

    // Workspace and Member Rules
    match /workspaces/{workspaceId} {
      allow read: if isMember(workspaceId);
      allow create: if isUserAuthenticated() && request.resource.data.ownerId == request.auth.uid;
      allow update: if isOwner(workspaceId);
      // Deletion might need special handling for sub-collections in the future.
      allow delete: if isOwner(workspaceId);
    }

    match /workspaceMembers/{membershipId} {
      // Allow members to read their own membership.
      allow read: if isUserAuthenticated() && request.auth.uid == resource.data.userId;
      // Only owners can add/remove members from a workspace.
      allow create, delete: if isOwner(request.resource.data.workspaceId);
    }

    // Resource Rules (Projects, Brands, Pages, etc.)
    match /projects/{projectId} {
      allow read, update, delete: if isMember(resource.data.workspaceId);
      allow create: if isMember(request.resource.data.workspaceId);
    }

    match /brands/{brandId} {
      allow read, update, delete: if isMember(resource.data.workspaceId);
      allow create: if isMember(request.resource.data.workspaceId);
    }

    match /pages_drafts/{pageId} {
      allow read, write: if isMember(resource.data.workspaceId);
    }

    match /pages_published/{pageId} {
      allow read: if true;
      allow write: if isMember(resource.data.workspaceId);
    }

    match /templates/{templateId} {
      allow read, update, delete: if isMember(resource.data.workspaceId);
      allow create: if isMember(request.resource.data.workspaceId);
    }

    // User-specific Rules
    match /userProgress/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Public Collection Rules
    match /pageViews/{viewId} {
      allow create: if true;
      allow read: if true; // Public for now, can be restricted later.
    }

    match /formSubmissions/{submissionId} {
      allow create: if true;
      allow read: if true; // Public for now, can be restricted later.
    }
  }
}
